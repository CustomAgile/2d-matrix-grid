<!DOCTYPE html>
<html>
<head>
    <title>2D Matrix Grid</title>
    <!--  (c) 2017 CA Technologies.  All Rights Reserved. -->
    <!--  Build Date: Mon Sep 18 2017 16:10:35 GMT-0600 (MDT) -->
    
    <script type="text/javascript">
        var APP_BUILD_DATE = "Mon Sep 18 2017 16:10:35 GMT-0600 (MDT)";
        var STORY    = "US1716";
        var BUILDER  = "corkr03";
        var CHECKSUM = 17280381703;
    </script>
    
    <script type="text/javascript" src="/apps/2.1/sdk.js"></script>
    <!-- our highcharts (needed so that we can add patterns) 
    <script type="text/javascript" src="/apps/2.1/lib/analytics/analytics-all.js"></script>
    -->
    
    
    <script type="text/javascript">
        Rally.onReady(function() {
            Ext.define("Rally.technicalservices.InfoLink",{extend:"Rally.ui.dialog.Dialog",alias:"widget.tsinfolink",informationHtml:null,title:"Build Information",defaults:{padding:5,margin:5},closable:!0,draggable:!0,autoShow:!0,width:350,initComponent:function(){Ext.id(this);this.title="<span class='icon-help'> </span>"+this.title,this.callParent(arguments)},_generateChecksum:function(a){var b,c=305419896;for(a=a.replace(/var CHECKSUM = .*;/,""),a=a.replace(/\s/g,""),b=0;b<a.length;b++)c+=a.charCodeAt(b)*b;return c},_checkChecksum:function(a){var b=Ext.create("Deft.Deferred");console.log("_checkChecksum",a);var c=this;return Ext.Ajax.request({url:document.URL,params:{id:1},success:function(a){return text=a.responseText,CHECKSUM&&CHECKSUM!==c._generateChecksum(text)?(console.log("Checksums don't match!"),void b.resolve(!1)):void b.resolve(!0)}}),b.promise},afterRender:function(){var a=Rally.getApp();a.isExternal()?this.addDocked({xtype:"container",cls:"build-info",padding:2,html:"... Running externally"}):this._checkChecksum(a).then({scope:this,success:function(a){a||this.addDocked({xtype:"container",cls:"build-info",padding:2,html:'<span class="icon-warning"> </span>Checksums do not match'})},failure:function(a){console.log("oops:",a)}}),this.callParent(arguments)},beforeRender:function(){this.callParent(arguments),this.informationHtml&&this.addDocked({xtype:"component",componentCls:"intro-panel",padding:2,html:this.informationHtml}),this.addDocked({xtype:"container",cls:"build-info",padding:2,html:"This app was created by the Rally Technical Services Team."}),APP_BUILD_DATE&&this.addDocked({xtype:"container",cls:"build-info",padding:2,html:"Build date/time: "+APP_BUILD_DATE})}}),Ext.define("Rally.technicalservices.Logger",{constructor:function(a){Ext.apply(this,a)},log:function(a){var b="[ "+Ext.util.Format.date(new Date,"Y-m-d H:i:s.u")+" ]",c=[];c=Ext.Array.push(c,[b]),c=Ext.Array.push(c,Ext.Array.slice(arguments,0)),window.console&&console.log.apply(console,c)}}),Ext.define("2d-matrix-grid",{extend:"Rally.app.App",componentCls:"app",logger:new Rally.technicalservices.Logger,defaults:{margin:10},items:[{xtype:"container",itemId:"message_box",tpl:"Hello, <tpl>{_refObjectName}</tpl>"},{xtype:"container",itemId:"display_box"}],config:{defaultSettings:{modelName:"defect",xAxisField:"Severity",yAxisField:"Project",xAxisValues:void 0,yAxisValues:void 0,includeXTotal:!0,includeYTotal:!0,gridFilter:"",includeBlanks:!0,sortBy:"total",sortDir:"desc",rowLimit:""}},fieldTypeAttribute:{Project:"Name",Release:"Name",Iteration:"Name",Owner:"UserName",Tags:"_tagsNameArray",Milestones:"_tagsNameArray",Parent:"Name",PortfolioItem:"Name",SubmittedBy:"UserName"},totalText:"Total",launch:function(){this._createPivotedStore(this.getSettings())},_createPivotedStore:function(a){this.logger.log("_createPivotedStore",a);var b=Ext.create("Rally.technicalservices.data.PivotStoreFactory",{modelName:a.modelName,xAxis:{field:this.getXAxisField(),attributeField:this.getXAxisAttributeField(),values:this.getXAxisValues()},yAxis:{field:this.getYAxisField(),attributeField:this.getYAxisAttributeField(),values:this.getYAxisValues()},includeNone:this.getSetting("includeBlanks"),includeXTotal:this.getSetting("includeXTotal"),includeYTotal:this.getSetting("includeYTotal"),gridFilter:this.getSetting("gridFilter"),totalText:this.totalText,sortBy:this.getSetting("sortBy"),sortDir:this.getSetting("sortDir"),rowLimit:this.getSetting("rowLimit")});b.on("load",this._addGrid,this),b.on("error",this._showError,this),b.loadPivotedDataStore()},_showError:function(a){this.logger.log("_showError",a)},getXAxisField:function(){return this.getSetting("xAxisField")},getYAxisField:function(){return this.getSetting("yAxisField")},getXAxisValues:function(){return this.getArraySettings("xAxisValues")},getYAxisValues:function(){return this.getArraySettings("yAxisValues")},getArraySettings:function(a){var b=this.getSetting(a);return b?Ext.isString(b)?b.split(","):b:[]},getXAxisAttributeField:function(){if("State"===this.getXAxisField()){var a=new RegExp("^PortfolioItem","i");if(a.test(this.getSetting("modelName")))return"Name"}return this.fieldTypeAttribute[this.getXAxisField()]||null},getYAxisAttributeField:function(){if("State"===this.getYAxisField()){var a=new RegExp("^PortfolioItem","i");if(a.test(this.getSetting("modelName")))return"Name"}return this.fieldTypeAttribute[this.getYAxisField()]||null},_addGrid:function(a,b){this.logger.log("_addGrid",a,b),this.down("rallygrid")&&this.down("rallygrid").destroy(),this.add({xtype:"rallygrid",store:a,columnCfgs:this._getColumns(b),showPagingToolbar:!1,showRowActionsColumn:!1})},_getColumns:function(a){var b=[],c=this.getYAxisField(),d=this.totalText;return _.each(a,function(a){var e="right",f=2;a===c&&(e="left",f=3),a===d&&(f=1),b.push({text:a,dataIndex:a,align:e,flex:f,renderer:function(b,e,f){return(f.get(c)===d||a===d)&&(e.tdCls="totalCls"),b}})}),this.logger.log("_getColumns",b),b},getOptions:function(){return[{text:"About...",handler:this._launchInfo,scope:this}]},_launchInfo:function(){this.about_dialog&&this.about_dialog.destroy(),this.about_dialog=Ext.create("Rally.technicalservices.InfoLink",{})},isExternal:function(){return"undefined"==typeof this.getAppId()},getSettingsFields:function(){return Rally.technicalservices.TwoDGridSettings.getFields(this.getSettings())},onSettingsUpdate:function(a){this.logger.log("onSettingsUpdate",a),Ext.apply(this,a),this._createPivotedStore(a)}}),Ext.define("Rally.technicalservices.MultiValueComboBox",{alias:"widget.multivaluecombo",extend:"Ext.form.FieldContainer",mixins:{field:"Ext.form.field.Field"},cls:"multistate",config:{fieldLabel:"",modelName:void 0,fieldName:void 0,value:void 0},refreshField:function(a){this.fieldName=a,this._initCombobox()},setModel:function(a){this.fieldName="",this.modelName=a,this._initCombobox()},initComponent:function(){this.callParent(arguments),this.mixins.field.initField.call(this),this._initCombobox()},_initCombobox:function(){this.down("rallycombobox")&&this.down("rallycombobox").destroy(),this.down("rallytagpicker")&&this.down("rallytagpicker").destroy();return"Tags"===this.fieldName?void this.add({xtype:"rallytagpicker"}):void this._addMultiValueComboBox()},_addMultiValueComboBox:function(){var a=this;this.add([{xtype:"rallycombobox",name:"valField",plugins:["rallyfieldvalidationui"],multiSelect:!0,emptyText:this.emptyText,displayField:"name",valueField:"value",width:this.width,editable:!1,submitValue:!1,storeType:"Ext.data.Store",storeConfig:{remoteFilter:!1,fields:["name","value"],data:[]},listeners:{change:function(b,c,d){a.currentValue=c}}}]),this.modelName&&this.fieldName&&this._loadValues()},_loadValues:function(){console.log("_loadValues",this.modelName,this.fieldName),Rally.technicalservices.WsapiToolbox.fetchAllowedValues(this.modelName,this.fieldName).then({scope:this,success:function(a){var b=Ext.Array.map(a,function(a){return{name:a,value:a}}),c=this.down("rallycombobox");c.getStore().loadData(b);var d=this.getValue();console.log("current values:",d),d&&!Ext.isArray(d)&&(d=d.split(",")),c.setValue(d),this.fireEvent("ready",this)},failure:function(a){Ext.Msg.alert("Problem Retrieving States",a)}})},getSubmitData:function(){var a={};if(this.down("rallytagpicker")){var b=[];_.each(this.down("rallytagpicker").getValue(),function(a){b.push(a.get("Name"))}),a[this.name]=b}else a[this.name]=this.currentValue;return a}}),Ext.override(Rally.ui.combobox.FieldComboBox,{blackListFields:[],whiteListFields:[],allowedTypes:[],constrained:!0,constructor:function(a){return this.blackListFields=a.blackListFields||[],this.whiteListFields=a.whiteListFields||[],this.allowedTypes=a.allowedTypes||[],this.constrained=a.constrained||!1,this.mergeConfig(a),this.store=Ext.create("Ext.data.Store",{fields:[this.valueField,this.displayField,"fieldDefinition"],data:[]}),this.callParent([this.config])},_populateStore:function(){if(this.store){var a=_.sortBy(_.map(_.filter(this.model.getFields(),this._isNotHidden,this),this._convertFieldToLabelValuePair,this),"name");this.store.loadRawData(a),this.setDefaultValue(),this.onReady()}},_isNotHidden:function(a){console.log("_isNotHidden",a,this.allowedTypes);var b=!1;return!a.hidden&&a.attributeDefinition&&(Ext.Array.contains(this.allowedTypes,a.attributeDefinition.AttributeType)&&(b=!0),Ext.Array.contains(this.blackListFields,a.name)&&(b=!1),this.constrained===!0&&a.attributeDefinition.Constrained!==!0&&(b=!1),Ext.Array.contains(this.whiteListFields,a.name)&&(b=!0)),b}}),Ext.define("Rally.technicalservices.data.PivotStoreFactory",{mixins:{observable:"Ext.util.Observable"},logger:new Rally.technicalservices.Logger,xAxis:{field:void 0,attributeField:void 0,values:void 0},yAxis:{field:void 0,attributeField:void 0,values:void 0},noneText:"-- No Entry --",totalField:"total",totalText:"Total",includeXTotal:!0,includeYTotal:!0,includeNone:!0,constructor:function(a){Ext.apply(this,a),this.logger.log("Pivot constructor",this,a),this.mixins.observable.constructor.call(this,a)},getFetchFields:function(){var a=this.xAxis&&this.xAxis.field||null,b=this.yAxis&&this.yAxis.field||null,c=[];return this.xAxis&&this.xAxis.attributeField&&c.push(this.xAxis.attributeField),this.yAxis&&this.yAxis.attributeField&&c.push(this.yAxis.attributeField),[a,b].concat(c)},getFilters:function(){return this.gridFilter&&this.gridFilter.length>0?Rally.data.wsapi.Filter.fromQueryString(this.gridFilter):[]},getSorters:function(a){var b=this.xAxis&&this.xAxis.field;return b&&this.xAxis.attributeField&&(b=b+"."+this.xAxis.attributeField),[{property:b,direction:a||"ASC"}]},fetchXAxisFields:function(){var a=Ext.create("Deft.Deferred"),b=this.modelName,c=this.xAxis.field,d=this.noneText,e=this.includeNone,f=this.includeXTotal,g=this.totalText,h=this.xAxis.values||[];return Rally.data.ModelFactory.getModel({type:b,success:function(b){b.getField(c).getAllowedValueStore().load({callback:function(b,c,i){var j=[];_.each(b,function(a){var b=a.get("StringValue");b&&(Ext.Array.contains(h,b)||0===h.length)&&j.push(b)},this),e&&j.push(d),f&&j.push(g),a.resolve(j)}})},scope:this}),a},fetchRecords:function(){var a=Ext.create("Deft.Deferred");return Ext.create("Rally.data.wsapi.Store",{model:this.modelName,fetch:this.getFetchFields(),filters:this.getFilters(),limit:"Infinity",sorters:this.getSorters()}).load({callback:function(b,c,d){this.logger.log("fetchRecords load",b,c,d);this.getCollectionField();a.resolve(b)},scope:this})},fetchCollectionValues:function(a,b){var c=Ext.create("Deft.Deferred"),d=this,e=[];return _.each(a,function(a){a.get(b)&&a.get(b).Count>0?e.push(this.fetchCollection(a,b)):a.set(b+"Array",[])},this),e.length>0?Deft.Promise.all(e).then({success:function(){d.logger.log("fetchCollectionValues",a),c.resolve(a)}}):c.resolve(a),c},fetchCollection:function(a,b){var c=Ext.create("Deft.Deferred");return a.getCollection(b).load({callback:function(d,e,f){var g=[];_.each(d,function(a){g.push(a.get("Name"))}),a.set(b+"Array",g),console.log("record.set",b,g,a),c.resolve()}}),c},getCollectionField:function(){return"Tags"===this.yAxis.field?"Tags":null},loadPivotedDataStore:function(){Deft.Promise.all([this.fetchRecords(),this.fetchXAxisFields()]).then({success:function(a){this.logger.log("loadPivotedDataStore success",a);var b=a[0],c=a[1],d=[this.yAxis.field],e=this.getPivotedDataStore(b,c);this.fireEvent("load",e,d.concat(c))},failure:function(a){this.fireEvent("error",a)},scope:this})},_initializeDataHash:function(a,b,c,d){var e={},f=this.yAxis.field;return _.each(a,function(a){e[a]=this._initializeRow(f,a,b,c)},this),this.logger.log("_inititalizeDataHash",e),e},getPivotedDataStore:function(a,b){this.logger.log("getPivotedDataStore",b);var c=this.xAxis,d=this.yAxis,e=c&&c.field,f=d&&d.field,g=c&&c.attributeField,h=d&&d.attributeField,i=[f].concat(b),j=this.includeYTotal,k=this.includeXTotal,l=b,m=this.yAxis.values||[],n=this.totalText,o=this._initializeRow(f,n,b,k),p=this._initializeDataHash(m,l,k,j);_.each(a,function(a){var c=g&&a.get(e)?a.get(e)[g]:a.get(e)||this.noneText,d=h&&a.get(f)?a.get(f)[h]:a.get(f)||this.noneText;c&&0!==c.length||(c=this.noneText);var i=[];"_tagsNameArray"===h?(i=_.map(d,function(a){return a.Name}),m.length>0&&(i=Ext.Array.intersect(i,m))):(Ext.Array.contains(m,d)||0===m.length)&&i.push(d),_.each(i,function(a){p[a]||(p[a]=this._initializeRow(f,a,b,k)),(Ext.Array.contains(l,c)||0===l.length)&&(p[a][c]=p[a][c]+1,k&&(p[a][n]=p[a][n]+1),j&&(o[c]=o[c]+1,o[n]=o[n]+1))},this)},this),j&&(p[this.totalText]=o);var q=f;"total"===this.sortBy&&(q=this.totalText);var r=this._getSortedData(p,q,this.sortDir,this.rowLimit,this.totalText,f);return Ext.create("Rally.data.custom.Store",{fields:i,data:r,remoteSort:!1,pageSize:r.length})},_getSortedData:function(a,b,c,d,e,f){var g=_.values(a),h="asc"===c.toLowerCase()?-1:1,i=Ext.Array.sort(g,function(a,c){return c[f]===e?-1:a[b]<c[b]?h:a[b]>c[b]?-1*h:0});if(d&&d>0){var j=Ext.Array.slice(i,0,d);if(d<i.length&&a[e]){var k={};k[f]=e,_.each(j,function(a){_.each(a,function(a,b){b!==f&&(k[b]=(k[b]||0)+a)})}),j.push(k)}return j}return i},_initializeRow:function(a,b,c,d){var e={};return e[a]=b,d&&(e.total=0),_.each(c,function(a){e[a]=0}),e}}),Ext.define("Rally.technicalservices.TwoDGridSettings",{singleton:!0,getFields:function(a){var b=a.sortBy||"alpha",c=a.sortDir||"desc",d=150,e=[{xtype:"rallycombobox",name:"modelName",fieldLabel:"Artifact Type",labelWidth:d,labelAlign:"right",bubbleEvents:["change"],valueField:"TypePath",value:a.modelName,storeConfig:{model:"TypeDefinition",remoteSort:!0,remoteFilter:!0,filters:[{property:"Creatable",value:!0},{property:"Deletable",value:!0},{property:"Restorable",value:!0},{property:"Name",operator:"!=",value:"Milestone"}]}},{xtype:"rallyfieldcombobox",model:a.modelName,name:"xAxisField",fieldLabel:"X Axis Field",labelWidth:d,labelAlign:"right",blackListFields:[],whiteListFields:["Release","Iteration","ScheduleState","State"],allowedTypes:["STRING","RATING"],constrained:!0,bubbleEvents:["change"],value:a.xAxisField,handlesEvents:{change:function(a){"modelName"===a.name&&this.refreshWithNewModelType(a.getRecord().get("TypePath"))}}},{name:"xAxisValues",xtype:"multivaluecombo",readyEvent:"ready",labelWidth:d,labelAlign:"right",width:500,modelName:a.modelName,fieldName:null,emptyText:"Choose field values to limit columns or leave blank to show all values...",fieldLabel:"X Axis Values",handlesEvents:{change:function(a){"modelName"===a.name&&this.setModel(a.getRecord().get("TypePath")),"xAxisField"===a.name&&this.refreshField(a.getValue())}}},{xtype:"rallyfieldcombobox",model:a.modelName,name:"yAxisField",labelAlign:"right",fieldLabel:"Y Axis Field",labelWidth:d,blackListFields:[],whiteListFields:["Release","Iteration","Project","ScheduleState","State","Owner","SubmittedBy","Tags","Parent","PortfolioItem","Milestones"],allowedTypes:["STRING","RATING"],constrained:!0,bubbleEvents:["change"],value:a.yAxisField,handlesEvents:{change:function(a){"modelName"===a.name&&this.refreshWithNewModelType(a.getRecord().get("TypePath"))}}},{name:"yAxisValues",xtype:"multivaluecombo",readyEvent:"ready",labelWidth:d,labelAlign:"right",width:500,modelName:a.modelName,fieldName:null,fieldLabel:"Y Axis Values",emptyText:"Choose field values to limit rows or leave blank to show all values...",handlesEvents:{change:function(a){"modelName"===a.name&&this.setModel(a.getRecord().get("TypePath")),"yAxisField"===a.name&&this.refreshField(a.getValue())}}},{xtype:"rallycheckboxfield",fieldLabel:"Include Blanks",value:a.includeBlanks,name:"includeBlanks",labelAlign:"right",labelWidth:d},{xtype:"rallycheckboxfield",fieldLabel:"Include Row Totals",value:a.includeXTotal,name:"includeXTotal",labelAlign:"right",labelWidth:d},{xtype:"rallycheckboxfield",fieldLabel:"Include Column Totals",value:a.includeYTotal,name:"includeYTotal",labelAlign:"right",labelWidth:d},{xtype:"radiogroup",fieldLabel:"Sort By",columns:1,vertical:!0,labelWidth:d,labelAlign:"right",items:[{boxLabel:"Alphabetical",name:"sortBy",inputValue:"alpha",checked:"alpha"===b},{boxLabel:"Total",name:"sortBy",inputValue:"total",checked:"total"===b}]},{xtype:"radiogroup",fieldLabel:"Sort Direction",columns:1,vertical:!0,labelWidth:d,labelAlign:"right",items:[{boxLabel:"Descending",name:"sortDir",inputValue:"desc",checked:"desc"===c},{boxLabel:"Ascending",name:"sortDir",inputValue:"asc",checked:"asc"===c}]},{xtype:"rallynumberfield",fieldLabel:"Total Rows to Display (Blank for no limit)",name:"rowLimit",labelWidth:d,labelAlign:"right",minValue:1,allowBlank:!0,value:a.rowLimit},{xtype:"textarea",fieldLabel:"Query",name:"gridFilter",anchor:"100%",cls:"query-field",margin:"0 70 0 0",labelAlign:"right",labelWidth:d,plugins:[{ptype:"rallyhelpfield",helpId:194},"rallyfieldvalidationui"],validateOnBlur:!1,validateOnChange:!1,validator:function(a){try{return a&&Rally.data.wsapi.Filter.fromQueryString(a),!0}catch(b){return b.message}}}];return e}}),Ext.define("Rally.technicalservices.WsapiToolbox",{singleton:!0,fetchWsapiCount:function(a,b){var c=Ext.create("Deft.Deferred");return Ext.create("Rally.data.wsapi.Store",{model:a,fetch:["ObjectID"],filters:b,limit:1,pageSize:1}).load({callback:function(d,e,f){f?c.resolve(e.resultSet.totalRecords):c.reject(Ext.String.format("Error getting {0} count for {1}: {2}",a,b.toString(),e.error.errors.join(",")))}}),c},fetchWsapiRecords:function(a,b,c){var d=Ext.create("Deft.Deferred");Ext.create("Rally.data.wsapi.Store",{model:a,fetch:c,filters:b,limit:1/0}).load({callback:function(c,e,f){f?d.resolve(c):d.reject(Ext.String.format("Error getting {0} for {1}: {2}",a,b.toString(),e.error.errors.join(",")))}});return d},fetchReleases:function(a){var b=Ext.create("Deft.Deferred"),c=a.getRecord();return null==c&&b.resolve([]),Ext.create("Rally.data.wsapi.Store",{model:"Release",fetch:["ObjectID"],filters:[{property:"Name",value:c.get("Name")},{property:"ReleaseStartDate",value:c.get("ReleaseStartDate")},{property:"ReleaseDate",value:c.get("ReleaseDate")}],limit:1/0}).load({callback:function(a,c,d){d?b.resolve(a):b.reject("Error loading Releases: "+c.error.errors.join(","))}}),b},fetchAllowedValues:function(a,b){var c=Ext.create("Deft.Deferred");return Rally.data.ModelFactory.getModel({type:a,success:function(a){a.getField(b).getAllowedValueStore().load({callback:function(a,b,d){var e=Ext.Array.map(a,function(a){return a.get("StringValue")});c.resolve(e)}})},failure:function(a){c.reject("Error loading field values: "+a)}}),c}});
            
               Rally.launchApp('2d-matrix-grid', {
                   name: '2D Matrix Grid'
               });
        });
    </script>
    
    <style type="text/css">

.app {
}
.tsinfolink {
    position:absolute;
    right:0px;
    width: 14px;
    height: 14px;
    border-radius: 7px;
    text-align: center;
    color: white;
    background: #C0C0C0;
    border-style: solid;
    border-width: 1px;
    margin-top: 25px;
    margin-right: 5px;
    cursor: pointer;
}
.totalCls {
    font-weight: bold;
    color: #666666;
    font-style: italic;
}
    </style>

</head>
<body></body>
</html>